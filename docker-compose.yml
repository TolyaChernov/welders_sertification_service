version: '3'

services:

  web:
    build: .
    # volumes:
    #   - .:/home11
    command: python3 manage.py runserver 0.0.0.0:8000 
    # command: make lint
    # restart: always
    # container_name: my-web
    ports:
      - "8000:8000"
    # env_file:
    #   - ./.env.dev



  # db:
  #   image: postgres:14-alpine
  #   # volumes:
  #   #   - postgres_data:/var/lib/postgresql/data/
  #   environment:
  #     - POSTGRES_DB='ptm_app'
  #     - POSTGRES_USER='anatol'
  #     - POSTGRES_PASSWORD='1234'
    # ports:
    #   - "5432:5432"





#   postgres:
#     container_name: postgres_container
#     image: postgres:13.3
#     command:
#       - "postgres"
#       - "-c"
#       - "max_connections=50"
#       - "-c"
#       - "shared_buffers=1GB"
#       - "-c"
#       - "effective_cache_size=4GB"
#       - "-c"
#       - "work_mem=16MB"
#       - "-c"
#       - "maintenance_work_mem=512MB"
#       - "-c"
#       - "random_page_cost=1.1"
#       - "-c"
#       - "temp_file_limit=10GB"
#       - "-c"
#       - "log_min_duration_statement=200ms"
#       - "-c"
#       - "idle_in_transaction_session_timeout=10s"
#       - "-c"
#       - "lock_timeout=1s"
#       - "-c"
#       - "statement_timeout=60s"
#       - "-c"
#       - "shared_preload_libraries=pg_stat_statements"
#       - "-c"
#       - "pg_stat_statements.max=10000"
#       - "-c"
#       - "pg_stat_statements.track=all"
#     environment:
#       POSTGRES_DB: "habrdb"
#       POSTGRES_USER: "habrpguser"
#       POSTGRES_PASSWORD: "pgpwd4habr"
#       PGDATA: "/var/lib/postgresql/data/pgdata"
#     volumes:
#       - ../2. Init Database:/docker-entrypoint-initdb.d
#       - .:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U habrpguser -d habrdb"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
#       start_period: 10s
#     restart: unless-stopped
#     deploy:
#       resources:
#         limits:
#           cpus: '1'
#           memory: 4G
#     networks:
#       - postgres

#   pgadmin:
#     container_name: pgadmin_container
#     image: dpage/pgadmin4:5.7
#     environment:
#       PGADMIN_DEFAULT_EMAIL: "habrpguser@habr.com"
#       PGADMIN_DEFAULT_PASSWORD: "pgadminpwd4habr"
#       PGADMIN_CONFIG_SERVER_MODE: "False"
#     volumes:
#       - ./pgadmin:/var/lib/pgadmin
#     ports:
#       - "5050:80"
#     restart: unless-stopped
#     deploy:
#       resources:
#         limits:
#           cpus: '0.5'
#           memory: 1G
#     networks:
#       - postgres

# networks:
#   postgres:
#     driver: bridge








  # redis:
  #   image: "redis"
  #   restart: always
  #   container_name: my_redis
  #   ports: 
  #   - "6379:6379"
  #   depends_on:
  #     - web





  # swagger-ui:
  #   image: swaggerapi/swagger-ui
  #   container_name: swagger_ui_container
  #   restart: always
  #   ports:
  #       - "88:8080"
  #   volumes:
  #       - ./doc:/usr/share/nginx/html/doc
  #   environment:
  #       API_URL: doc/openapi.yaml








  # worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   command: ['celery', '-A', 'storegame', 'worker', '-l', 'info']
  #   container_name: my-worker
  #   environment:
  #     - BROKER_URL=redis://my_redis:6379
  #     - RESULT_BACKEND=redis://my_redis:6379
  #   depends_on:
  #     - redis














  # celery_beat:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   image: celery_beat
  #   command: celery -A storegame beat
  #   container_name: my_celery_beat
  #   # volumes:
  #   #   - .:/app
  #   # env_file:
  #   #   - ./.env/.dev-sample
  #   depends_on:
  #     - redis









  # flower:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   image: mher/flower:0.9.7
  #   command: python3 -m celery -A storegame flower --port=5555
  #   # volumes:
  #   #   - .:/app
  #   # env_file:
  #   #   - ./.env/.dev-sample
  #   ports:
  #     - 5555:5555
  #   # depends_on:
  #   #   - redis
  #   #   # - db





  # smtp:
  #   build:
  #     context: .
  #     dockerfile: smtp_Dockerfile
  #   # command: python3 -m smtp -n -c DebuggingServer localhost:1025
  #   command: ['smtp', '-n', '-c', 'DebuggingServer', 'localhost:1025']
  #   container_name: my-smtp
  #   ports:
  #     - 1025:1025
  #   # environment:
  #   #   - BROKER_URL=redis://my_redis:6379
  #   #   - RESULT_BACKEND=redis://my_redis:6379
  #   # depends_on:
  #   #   - redis




  # smtp:
  #     image: namshi/smtp
  #     container_name: smtp_relay
  #     restart: always
  #     ports:
  #     - "25:25"


